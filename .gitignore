# TODO: Find what's generating this 'oom_1' file and remove it
oom_1
#########

lib-cov
*.seed
*.log
*.csv
*.dat
*.out
*.pid
*.gz

pids
logs
results
node_modules
.build
.project
npm-debug.log

.idea
.DS_Store

oom_1

test/util/casper/cookies/cookies.json
test/coverage

#// Generated files
#// --------------------

# progressbar
public/js/progressbar/dist
public/js/progressbar/src/js/templates/

# businessSetup
public/js/businessSetup/dist/
public/js/businessSetup/test/compiled/
public/js/businessSetup/src/js/templates/templates.js


#// Dependencies
#// -----------------------

# progressbar
public/js/progressbar/node_modules
public/js/progressbar/lib/bower_components

## TODO: These should be moved into bower_components
public/js/progressbar/lib/backbone/
public/js/progressbar/lib/jQuery/


# businessSetup
public/js/businessSetup/node_modules


#casper test screesnhots
sc**.png

### JetBrains template
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion

*.iml

## Directory-based project format:
.idea/
# if you remove the above rule, at least ignore the following:

# User-specific stuff:
# .idea/workspace.xml
# .idea/tasks.xml
# .idea/dictionaries

# Sensitive or high-churn files:
# .idea/dataSources.ids
# .idea/dataSources.xml
# .idea/sqlDataSources.xml
# .idea/dynamic.xml
# .idea/uiDesigner.xml

# Gradle:
# .idea/gradle.xml
# .idea/libraries

# Mongo Explorer plugin:
# .idea/mongoSettings.xml

## File-based project format:
*.ipr
*.iws

## Plugin-specific files:

# IntelliJ
/out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties


### Node template
# Logs
logs
*.log

# Runtime data
pids
*.pid
*.seed

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directory
# https://docs.npmjs.com/misc/faq#should-i-check-my-node-modules-folder-into-git
node_modules


